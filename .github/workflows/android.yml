name: Android CI (SDK ready)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Match your module config: compileSdk = 34
  ANDROID_PLATFORM: "platforms;android-34"
  ANDROID_BUILD_TOOLS: "build-tools;34.0.0"

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK (commandline-tools)
        uses: android-actions/setup-android@v3

      - name: Install required Android packages
        run: |
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "${ANDROID_PLATFORM}" "${ANDROID_BUILD_TOOLS}" "platform-tools"
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: Build Debug APK
        uses: gradle/gradle-build-action@v3
        with:
          arguments: :app:assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
    needs: debug
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK (commandline-tools)
        uses: android-actions/setup-android@v3

      - name: Install required Android packages (release)
        run: |
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "${ANDROID_PLATFORM}" "${ANDROID_BUILD_TOOLS}" "platform-tools"
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: Decode keystore from secret
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > $HOME/release.jks

      - name: Prepare signing properties
        run: |
          echo "MYAPP_STORE_FILE=$HOME/release.jks" >> gradle.properties
          echo "MYAPP_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> gradle.properties
          echo "MYAPP_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> gradle.properties
          echo "MYAPP_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> gradle.properties

      - name: Build Release APK and AAB
        uses: gradle/gradle-build-action@v3
        with:
          arguments: |
            :app:assembleRelease
            :app:bundleRelease

      - name: Upload Release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
