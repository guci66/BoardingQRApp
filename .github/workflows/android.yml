name: Android CI (final, wrapper + new action)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ANDROID_PLATFORM: "platforms;android-34"
  ANDROID_BUILD_TOOLS: "build-tools;34.0.0"

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install required Android packages
        run: |
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "${ANDROID_PLATFORM}" "${ANDROID_BUILD_TOOLS}" "platform-tools"
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses

      # 如果仓库里缺少 gradle-wrapper.jar，就自动下载
      - name: Ensure Gradle Wrapper jar exists
        run: |
          if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "gradle-wrapper.jar missing, downloading..."
            mkdir -p gradle/wrapper
            curl -sLo gradle/wrapper/gradle-wrapper.jar https://services.gradle.org/distributions/gradle-8.7-wrapper.jar
          fi

      # 处理 Windows CRLF，给 gradlew 执行权限
      - name: Make gradlew executable (fix CRLF)
        run: |
          sed -i 's/\r$//' gradlew
          chmod +x gradlew

      # ✅ 官方推荐的新动作：只负责 Gradle 缓存与环境准备，不再用已弃用的“arguments”执行方式
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Verify wrapper
        run: ./gradlew --version

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
